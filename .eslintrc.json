{
  "env": {
    "browser": true,
    "es2022": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks",
    "import"
  ],
  "rules": {
    // TypeScript specific rules
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    "@typescript-eslint/prefer-const": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/no-unnecessary-condition": "warn",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    
    // React specific rules
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-key": "error",
    "react/jsx-no-bind": ["warn", { "allowArrowFunctions": true }],
    "react/jsx-no-leaked-render": "error",
    "react/jsx-boolean-value": ["error", "never"],
    "react/self-closing-comp": "error",
    "react/jsx-pascal-case": "error",
    
    // Import/Export rules
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-duplicate-imports": "error",
    "import/no-unused-modules": "warn",
    "import/no-cycle": "error",
    "import/no-self-import": "error",
    
    // General code quality rules
    "prefer-const": "error",
    "no-var": "error",
    "no-console": "warn",
    "no-debugger": "error",
    "no-alert": "error",
    "eqeqeq": ["error", "smart"],
    "prefer-template": "error",
    "object-shorthand": "error",
    "prefer-destructuring": "error",
    "no-param-reassign": "error",
    "no-return-assign": "error",
    "no-throw-literal": "error",
    "prefer-promise-reject-errors": "error",
    "no-nested-ternary": "warn",
    "no-unneeded-ternary": "error",
    "no-else-return": "error",
    "complexity": ["warn", 10],
    "max-depth": ["warn", 4],
    "max-lines-per-function": ["warn", 50],
    "no-magic-numbers": ["warn", { "ignore": [0, 1, -1] }],
    
    // Performance rules
    "no-loop-func": "error",
    "no-await-in-loop": "warn",
    
    // Security rules
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-script-url": "error",
    
    // Stylistic rules
    "indent": "off",
    "@typescript-eslint/indent": "off",
    "quotes": ["error", "double", { "avoidEscape": true }],
    "semi": ["error", "always"],
    "comma-dangle": ["error", "always-multiline"],
    "object-curly-spacing": ["error", "always"],
    "array-bracket-spacing": ["error", "never"],
    "computed-property-spacing": ["error", "never"],
    "space-in-parens": ["error", "never"],
    "no-trailing-spaces": "error",
    "eol-last": "error",
    "max-len": ["warn", { "code": 120, "ignoreUrls": true }]
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "./tsconfig.json"
      }
    }
  },
  "ignorePatterns": [
    "dist",
    "build",
    "node_modules",
    "*.config.js",
    "*.config.ts",
    ".eslintrc.json"
  ],
  "overrides": [
    {
      "files": ["*.tsx", "*.jsx"],
      "rules": {
        "@typescript-eslint/no-unused-vars": "off"
      }
    },
    {
      "files": ["server/**/*"],
      "rules": {
        "no-console": "off"
      }
    }
  ]
}